name: Build Release Artifacts

on:
  # Accept manual events.
  workflow_dispatch:
  push:
    tags:
      - '*'

env:
  BUILD_TYPE: Release

jobs:
  build_release:
    name: build_release

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:        
        include:
          - os: ubuntu-latest
          - os: windows-latest
          # - os: macos-latest
      
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          lfs: true

      - name: Install Ninja
        id: ninja
        uses: turtlesec-no/get-ninja@main

      - name: Ninja version
        run: echo "${{ steps.ninja.outputs.version }}"

      - name: <Linux> Install dependencies for DaltonLens
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get -y update
          sudo --preserve-env=DEBIAN_FRONTEND apt-get install -y coreutils xserver-xorg-video-dummy mesa-utils
          sudo --preserve-env=DEBIAN_FRONTEND apt-get install -y cmake libx11-dev libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev libgl-dev libxcb1-dev libappindicator3-dev libgtk-3-dev

      - name: <Windows> Setup devcmd
        if: matrix.os == 'windows-latest'
        uses: ilammy/msvc-dev-cmd@v1

      - name: Configure CMake
        run: cmake -G Ninja -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: Create package
        run: |
          # FIXME: I don't understand why the external projects dependencies are not properly handled sometimes.
          # It happens systematically on Windows with github actions.
          cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --target glfw-deps clip-deps
          cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --target package

      - name: <Linux> Create source package
        if: matrix.os == 'ubuntu-latest'
        run: cmake --build ${{github.workspace}}/build --config Release --target package_source

      - name: Archive the generate package
        uses: actions/upload-artifact@v2
        with:
          name: Packages for DaltonLens
          path: |
            build/*.tar.gz
            build/*.zip
            build/*-win64.exe
            build/*.dmg
